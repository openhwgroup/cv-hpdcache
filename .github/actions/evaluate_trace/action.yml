##
#  Copyright 2023,2024 Cesar Fuguet
#
#  SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
#
#  Licensed under the Solderpad Hardware License v 2.1 (the “License”); you
#  may not use this file except in compliance with the License, or, at your
#  option, the Apache License version 2.0. You may obtain a copy of the
#  License at
#
#  https://solderpad.org/licenses/SHL-2.1/
#
#  Unless required by applicable law or agreed to in writing, any work
#  distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
##
##
#  Author     : Cesar Fuguet
#  Date       : October, 2024
#  Description: GitHub Action to run a given test sequence on the Verilator TB
##
name: 'Evaluate trace'
inputs:
  trace_perf:
    description: 'Name of the file with current performance'
    required: true
    default: 'trace_qemu'

  config:
    description: 'Config of the HPDcache'
    required: true
    default: 'default'

  github_token:
    description: 'GitHub token'
    required: true

runs:
  using: "composite"
  steps:
    - name: verify_perf
      shell: bash
      run: |
        file=$(find . -name "*from_file*.log")
        file_prev="${{ inputs.trace_perf }}"
        prev_cycle=$(cat $file_prev | grep "cycle" | cut -d "=" -f 2)
        prev_read=$(cat $file_prev | grep "read" | cut -d "=" -f 2)
        prev_write=$(cat $file_prev| grep "write" | cut -d "=" -f 2)
        nb_read_miss=$(cat $file | grep "Read miss rate" | tr -s " " | cut -d " " -f 5)
        nb_write_miss=$(cat $file | grep "Write miss rate" | tr -s " " | cut -d " " -f 5)
        nb_cycle_execution=$(cat $file  | grep SB.NB_CYCLES | tr -s " " | cut -d " " -f 3)

        if (( $(echo "$nb_read_miss > $prev_read"  | bc -l) ))
        then
          echo -e  "\033[31mThe percentage of miss on read has grow\033[0m"
          exit 1
        fi
        if (( $(echo "$nb_write_miss > $prev_write"  | bc -l) ))
        then
          echo -e  "\033[31mThe percentage of miss on write has grow\033[0m"
          exit 2
        fi
        if (( $(echo "$nb_cycle_execution > $prev_cycle"  | bc -l) ))
        then
          echo -e  "\033[31mThe number of cycle has grow\033[0m"
          exit 3
        fi

    - name: Change best perf
      shell: bash
      run: |
        file_prev="${{ inputs.trace_perf }}"
        file=$(find . -name "*from_file*.log")
        
        prev_cycle=$(cat $file_prev | grep "cycle" | cut -d "=" -f 2)
        prev_read=$(cat $file_prev | grep "read" | cut -d "=" -f 2)
        prev_write=$(cat $file_prev| grep "write" | cut -d "=" -f 2)
        nb_read_miss=$(cat $file | grep "Read miss rate" | tr -s " " | cut -d " " -f 5)
        nb_write_miss=$(cat $file | grep "Write miss rate" | tr -s " " | cut -d " " -f 5)
        nb_cycle_execution=$(cat $file  | grep SB.NB_CYCLES | tr -s " " | cut -d " " -f 3)
        x=0
        if (( $(echo "$nb_read_miss < $prev_read"  | bc -l) ))
        then
          x=1
          sed -i -E "s/read.*/read=$nb_read_miss/" $file_prev 
        fi
        if (( $(echo "$nb_write_miss < $prev_write"  | bc -l) ))
        then
          x=1
          sed -i -E "s/write.*/write=$nb_write_miss/" $file_prev 
        fi
        if (( $(echo "$nb_cycle_execution < $prev_cycle"  | bc -l) ))
        then
          x=1
          sed -i -E "s/cycle.*/cycle=$nb_cycle_execution/" $file_prev 
        fi
        rm $file
        if [[ $x -eq 0 ]]
        then
          echo "skip_push=true" >> $GITHUB_ENV
          exit 0
        fi
        echo "skip_push=false" >> $GITHUB_ENV
        git config --local user.email "test@github.com"
        git config --local user.name "GitHub Action test"
        git add ./$file_prev
        git commit -m "new best perf on ${{ inputs.config }} "
    
    - name: Push changes # push the output folder to your repo
      if: env.skip_push != 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github_token }}

    - name: Put a comment 
      if: failure()
      env:
        TOKEN: ${{ inputs.github_token }}
      shell: bash
      run: |
        PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")

        COMMENT=" Pipeline has failed due to a decrease in performance in ${{ inputs.config }}."

        curl -s -H "Authorization: token $TOKEN" \
             -H "Content-Type: application/json" \
             -X POST \
             -d "{\"body\": \"$COMMENT\"}" \
             "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"

